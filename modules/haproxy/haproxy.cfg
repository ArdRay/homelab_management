global
    log stdout format raw local0 debug

    ssl-default-bind-options ssl-min-ver TLSv1.2 prefer-client-ciphers
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-ciphers ECDH+AESGCM:ECDH+CHACHA20:ECDH+AES256:ECDH+AES128:!aNULL:!SHA1:!AESCCM

    ssl-default-server-options ssl-min-ver TLSv1.2
    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-ciphers ECDH+AESGCM:ECDH+CHACHA20:ECDH+AES256:ECDH+AES128:!aNULL:!SHA1:!AESCCM

    tune.ssl.default-dh-param 2048

    chroot /var/lib/haproxy
    pidfile /var/run/haproxy.pid
    user haproxy
    group haproxy
    daemon

defaults
    mode http
    log global
    option httplog
    option forwardfor

    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

frontend fe_http
    log-format "%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r %sslv %sslc %[ssl_fc_cipherlist_str]"
    bind 10.10.2.6:443 ssl crt /etc/haproxy/certs/ alpn h2,http/1.1
    bind 10.10.5.2:443 ssl crt /etc/haproxy/certs/ alpn h2,http/1.1

    acl host-emby hdr(host) -i emby.mxard.cloud
    acl host-prometheus hdr(host) -i prometheus.mxard.cloud

    # This is required if utilising basic auth with /api/verify?auth=basic
    http-request set-var(txn.host) hdr(Host)
    http-request set-var(req.scheme) str(https) if { ssl_fc }
    http-request set-var(req.scheme) str(http) if !{ ssl_fc }
    http-request set-var(req.questionmark) str(?) if { query -m found }
   
    # These are optional if you wish to use the Methods rule in the access_control section.
    http-request set-var(req.method) str(CONNECT) if { method CONNECT }
    http-request set-var(req.method) str(GET) if { method GET }
    http-request set-var(req.method) str(HEAD) if { method HEAD }
    http-request set-var(req.method) str(OPTIONS) if { method OPTIONS }
    http-request set-var(req.method) str(POST) if { method POST }
    http-request set-var(req.method) str(TRACE) if { method TRACE }
    http-request set-var(req.method) str(PUT) if { method PUT }
    http-request set-var(req.method) str(PATCH) if { method PATCH }
    http-request set-var(req.method) str(DELETE) if { method DELETE }

    # Required headers
    http-request set-header X-Real-IP %[src]
    http-request set-header X-Forwarded-Method %[var(req.method)]
    http-request set-header X-Forwarded-Proto %[var(req.scheme)]
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Forwarded-Uri %[path]%[var(req.questionmark)]%[query]

    # Service backend route(s)
    use_backend be_emby if host-emby
    use_backend be_prometheus if host-prometheus

backend be_emby
    server emby emby.int.mxard.cloud:443 ssl verify none

backend be_prometheus
    server prometheus prometheus.int.mxard.cloud:443 check maxconn 20 ssl verify none
